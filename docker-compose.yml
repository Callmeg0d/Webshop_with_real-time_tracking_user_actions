version: "3.7"
services:
  db:
    container_name: "db"
    volumes:
      - postgresdata:/var/lib/postgresql/data
    image: postgres:17
    env_file:
      - .env-non-dev
    ports:
      - 5432:5432

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      retries: 5

  redis:
    container_name: "redis_db"
    image: redis:7

  webshop:
    image: webshop:latest
    build:
      context: .
    container_name: webshop_app
    env_file:
      - .env-non-dev
    depends_on:
      - db
      - redis
    command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 3 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - 7777:8000

  celery:
    image: webshop:latest
    build:
      context: .
    container_name: webshop_celery
    command: sh -c "celery --app=app.tasks.celery_app:celery worker -l INFO"
    env_file:
      - .env-non-dev
    depends_on:
      - redis

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000

volumes:
  postgresdata:
  grafanadata:
  prometheusdata: